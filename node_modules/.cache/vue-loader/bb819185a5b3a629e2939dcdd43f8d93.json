{"remainingRequest":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/components/Footer.vue?vue&type=template&id=40ab164b&scoped=true&ts=true","dependencies":[{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/components/Footer.vue","mtime":1642322238000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0idG9kby1mb290ZXIiPgogICAgPGRpdj4KICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgdi1tb2RlbD0iaXNDaGVja0FsbCIgLz48L2xhYmVsPgogICAgICA8c3BhbiBjbGFzcz0idG9kby10YWciPuW3suWujOaIkCB7eyBjb3VudCB9fSAv5YWo6YOoIHt7IHRvZG9zLmxlbmd0aCB9fTwvc3Bhbj4KICAgIDwvZGl2PgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kYW5nZXIiIEBjbGljaz0iY2xlYXJDb21wbGV0ZWQiPua4hemZpOW3suWujOaIkOS7u+WKoTwvYnV0dG9uPgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/components/Footer.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtrE,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/components/Footer.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"todo-footer\">\n    <div>\n      <label><input type=\"checkbox\" v-model=\"isCheckAll\" /></label>\n      <span class=\"todo-tag\">已完成 {{ count }} /全部 {{ todos.length }}</span>\n    </div>\n    <button class=\"btn btn-danger\" @click=\"clearCompleted\">清除已完成任务</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from \"vue\";\nimport { Todo } from \"../types/todo\";\nexport default defineComponent({\n  name: \"Footer\",\n  props: {\n    todos: {\n      type: Array as () => Todo[],\n      required: true,\n    },\n    clearCompleted: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup(props, { emit }) {\n    // const count = ref(\"1\");\n    const count = computed(() => {\n      // 对象属性求和\n      return props.todos.reduce((pre: number, curr: Todo) => {\n        console.log(\"a\", pre, curr);\n        return pre + (curr.isCompleted ? 1 : 0);\n      }, 0);\n    });\n    // console.log(\"count\", count);\n    const isCheckAll = computed({\n      get() {\n        return count.value > 0 && count.value === props.todos.length;\n      },\n      set(val) {\n        emit(\"isCheckAll\", val);\n      },\n    });\n    // const clear = () => {\n    //   props.clearCompleted(true);\n    //   // emit(\"clearCompleted\", true);\n    // };\n    return {\n      count,\n      isCheckAll,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.todo-footer {\n  display: flex;\n  justify-content: space-between;\n}\n.btn-danger {\n  color: #fff;\n  background-color: #e95b47;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n  cursor: pointer;\n}\n.todo-tag {\n  margin-left: 15px;\n}\n</style>\n"]}]}