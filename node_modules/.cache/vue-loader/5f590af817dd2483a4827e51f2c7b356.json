{"remainingRequest":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/src/components/ListItem.vue?vue&type=style&index=0&id=a2cd1efe&scoped=true&lang=css","dependencies":[{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/src/components/ListItem.vue","mtime":1651324929000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50b2RvLWl0ZW0gewogIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Ymx1ZTsKICBsaXN0LXN0eWxlOiBub25lOwogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmc6IDVweDsKICBtYXJnaW4tbGVmdDogLTQwcHg7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5kZWxCdG4gewogIGJhY2tncm91bmQtY29sb3I6ICNlOTViNDc7CiAgY29sb3I6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGJvcmRlcjogbm9uZTsKICBkaXNwbGF5OiBub25lOwp9Ci50b2RvLWl0ZW06aG92ZXIgewogIGNvbG9yOiBsaWdodGNvcmFsOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxOTAsIDc4LCAwLjMpOwp9Ci50b2RvLWl0ZW06aG92ZXIgLmRlbEJ0biB7CiAgZGlzcGxheTogYmxvY2s7Cn0K"},{"version":3,"sources":["/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/src/components/ListItem.vue"],"names":[],"mappings":";AAiFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3C;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.0/src/components/ListItem.vue","sourceRoot":"","sourcesContent":["<template>\n  <!--\n        此处样式我使用css hover来做\n        视频中老师用到的两个方法 @mouseenter @mouseleave分别为鼠标进入和离开的回调\n    -->\n  <li class=\"todo-item\">\n    <div>\n      <input type=\"checkbox\" v-model=\"isCompleted\" />\n      <span>{{ todoitem.title }}</span>\n    </div>\n    <button class=\"delBtn\" @click=\"del(index)\">删除</button>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, watch } from 'vue'\n// 引入接口\nimport { Todo } from '@/types/todo'\nexport default defineComponent({\n  name: 'ListItem',\n  props: {\n    todoitem: {\n      //函数返回的是Todo类型\n      type: Object as () => Todo,\n      required: true\n    },\n    index: {\n      type: Number\n    }\n  },\n  setup(props, con) {\n    console.log('props', props, con)\n    // // 当复选框选中时，所选事件下标索引将添加到selectedItemList中\n    // let selectedItemList = reactive([]);\n    // if (window.sessionStorage.getItem(\"selectedItemList\")) {\n    //   selectedItemList = JSON.parse(\n    //     window.sessionStorage.getItem(\"selectedItemList\") + \"\"\n    //   );\n    //   selectedItemList.push();\n    // }\n    const delTodo = inject('delTodo')\n    const edit = inject('edit')\n    const updateState = inject('updateState')\n    const del = (index: number) => {\n      if (window.confirm('确认删除吗？')) {\n        if (typeof delTodo === 'function') delTodo(index)\n      }\n    }\n    // const updateState = (index: number) => {\n    //   if (window.confirm(\"确认删除吗？\")) {\n    //     if (typeof delTodo === \"function\") delTodo(index);\n    //   }\n    // };\n    // const isCompleted = computed(() => {\n    //   return props.todoitem.isCompleted;\n    // });\n    const isCompleted = computed({\n      get() {\n        return props.todoitem.isCompleted\n      },\n      set(val) {\n        if (typeof updateState === 'function') updateState(props.todoitem, val)\n      }\n    })\n    // const isCompleted = computed({\n    //   get() {\n    //     return props.todoitem.isCompleted;\n    //   },\n    //   set(val) {\n    //     if (typeof updateState === \"function\") updateState(props.todoitem, val);\n    //   },\n    // });\n    return {\n      isCompleted,\n      del\n    }\n  }\n})\n</script>\n\n<style scoped>\n.todo-item {\n  border: 1px solid lightblue;\n  list-style: none;\n  width: 100%;\n  padding: 5px;\n  margin-left: -40px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-between;\n}\n.delBtn {\n  background-color: #e95b47;\n  color: #fff;\n  border-radius: 5px;\n  border: none;\n  display: none;\n}\n.todo-item:hover {\n  color: lightcoral;\n  background-color: rgba(137, 190, 78, 0.3);\n}\n.todo-item:hover .delBtn {\n  display: block;\n}\n</style>\n"]}]}