{"remainingRequest":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/App.vue","mtime":1642312343000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50b2RvLXdyYXAgewogIHdpZHRoOiA1MDBweDsKICBtYXJnaW46IDAgYXV0bzsKICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGJsdWU7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIHBhZGRpbmc6IDIwcHg7Cn0KLnRvZG8td3JhcCBoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/App.vue"],"names":[],"mappings":";AAwFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/Users/lixin/iCloud Drive（归档）/Documents/code/vue3学习/vue3-project/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"todo-wrap\">\n    <h2>2022:todoList</h2>\n    <Header @addToPlan=\"addToPlan\"></Header>\n    <List :todos=\"todos\"></List>\n    <Footer :todos=\"todos\" @isCheckAll=\"isCheckAll\" :clearCompleted=\"clearCompleted\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide, reactive, toRefs, watch, onMounted } from \"vue\";\nimport Header from \"./components/Head.vue\";\nimport List from \"./components/List.vue\";\nimport Footer from \"./components/Footer.vue\";\nimport { saveTodos, readTodos } from \"./utils/localStorageUtils\";\nimport { Todo } from \"@/types/todo.ts\";\n// interface Todo {\n//   id: number;\n//   title: string;\n//   isCompleted: boolean;\n// }\n// import { saveTodos, readTodos } from \"@/utils/localStorageUtils\";\n\nexport default defineComponent({\n  name: \"App\",\n  setup() {\n    // const state = reactive<{ todos: Todo[] }>({\n    //   todos: [\n    //     { id: 1, title: \"22\", isCompleted: false },\n    //     { id: 2, title: \"111\", isCompleted: true },\n    //     { id: 3, title: \"333\", isCompleted: false },\n    //   ],\n    // });\n    const state = reactive<{ todos: Todo[] }>({\n      todos: [],\n    });\n    onMounted(() => {\n      setTimeout(() => {\n        state.todos = readTodos();\n      }, 1000);\n    });\n    watch(() => state.todos, saveTodos, { deep: true });\n    const addToPlan = (val: Todo) => {\n      console.log(\"addToPlan\", val);\n      state.todos.unshift(val);\n    };\n    // 删除子项\n    const delTodo = (index: number) => {\n      console.log(\"indx\", index);\n      state.todos.splice(index, 1);\n    };\n    // 更新勾选子项状态\n    const updateState = (todo: Todo, val: boolean) => {\n      todo.isCompleted = val;\n    };\n    // 全部勾选\n    const isCheckAll = (val: boolean) => {\n      console.log(\"isCheckAll\", val);\n      state.todos.forEach((item: Todo) => {\n        item.isCompleted = val;\n      });\n      // todo.isCompleted = val;\n    };\n    const clearCompleted = () => {\n      state.todos = state.todos.filter((item) => {\n        return !item.isCompleted;\n      });\n    };\n    provide(\"delTodo\", delTodo);\n    provide(\"updateState\", updateState);\n\n    return {\n      ...toRefs(state),\n      addToPlan,\n      delTodo,\n      isCheckAll,\n      clearCompleted,\n    };\n  },\n  components: {\n    Header,\n    List,\n    Footer,\n  },\n});\n</script>\n\n<style>\n.todo-wrap {\n  width: 500px;\n  margin: 0 auto;\n  border: 1px solid lightblue;\n  border-radius: 5px;\n  padding: 20px;\n}\n.todo-wrap h2 {\n  text-align: center;\n}\n</style>\n"]}]}